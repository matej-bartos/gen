import streamlit as st
from docx import Document
from docx.enum.table import WD_TABLE_ALIGNMENT
from docx.oxml.ns import qn
import io

# --- 1. Vstupn√≠ genetick√° data ---
data = {
    "MCM6 13910": {
        "TT": {"KL√çƒå": "+/+", "INTERPRETACE": "Vrozen√° tolerance lakt√≥zy."},
        "CT": {"KL√çƒå": "+/-", "INTERPRETACE": "ƒå√°steƒçn√° tolerance lakt√≥zy."},
        "CC": {"KL√çƒå": "-/-", "INTERPRETACE": "Nedostatek lakt√°zy."}
    },
    "DAO": {
        "CC": {"KL√çƒå": "+/+", "INTERPRETACE": "Norm√°ln√≠ aktivita DAO."},
        "CT": {"KL√çƒå": "+/-", "INTERPRETACE": "Riziko histaminov√© intolerance."},
        "TT": {"KL√çƒå": "-/-", "INTERPRETACE": "N√≠zk√° aktivita DAO."}
    },
    "PEMT (rs7946)": {
        "CC": {"KL√çƒå": "+/+", "INTERPRETACE": "Norm√°ln√≠ metabolismus tuk≈Ø."},
        "CT": {"KL√çƒå": "+/-", "INTERPRETACE": "Pomalej≈°√≠ odbour√°v√°n√≠ tuk≈Ø."},
        "TT": {"KL√çƒå": "-/-", "INTERPRETACE": "V√Ωraznƒõ sn√≠≈æen√Ω metabolismus tuk≈Ø."}
    }
}

# --- 2. Funkce: Vlo≈æen√≠ tabulky za z√°lo≈æku ---
def vloz_tabulku_za_bookmark(doc, vybrane, bookmark_name="TABULKA"):
    for p in doc.paragraphs:
        for bookmark in p._element.findall(".//w:bookmarkStart", namespaces=p._element.nsmap):
            if bookmark.get(qn("w:name")) == bookmark_name:
                parent = bookmark.getparent()
                idx = list(parent).index(bookmark)

                # Vytvo≈ôit tabulku
                table = doc.add_table(rows=1, cols=4)
                table.style = "Table Grid"
                table.alignment = WD_TABLE_ALIGNMENT.LEFT

                hdr = table.rows[0].cells
                hdr[0].text = "GEN"
                hdr[1].text = "V√ùSLEDN√Å VARIANTA"
                hdr[2].text = "Dle kl√≠ƒçe"
                hdr[3].text = "INTERPRETACE"

                for gen, varianty in vybrane.items():
                    for var in varianty:
                        row = table.add_row().cells
                        row[0].text = gen
                        row[1].text = var
                        row[2].text = data[gen][var]["KL√çƒå"]
                        row[3].text = data[gen][var]["INTERPRETACE"]

                parent.insert(idx + 1, table._element)
                return True
    return False

# --- 3. UI logika ve Streamlitu ---
st.set_page_config(page_title="Genetick√° zpr√°va", page_icon="üß¨", layout="centered")
st.title("üß¨ Gener√°tor genetick√© zpr√°vy")

vybrane = {}
for gen in data:
    if st.checkbox(gen, value=False):
        varianty = st.multiselect(f"Varianty pro {gen}:", list(data[gen].keys()), key=gen)
        if varianty:
            vybrane[gen] = varianty

if st.button("üìÑ Generovat zpr√°vu"):
    if not vybrane:
        st.warning("‚ùó Vyber alespo≈à jeden gen a jeho variantu.")
    else:
        try:
            doc = Document("Vysledkova_zprava.docx")
        except Exception as e:
            st.error(f"‚ö†Ô∏è Nepoda≈ôilo se naƒç√≠st ≈°ablonu: {e}")
        else:
            success = vloz_tabulku_za_bookmark(doc, vybrane)
            if not success:
                st.error("‚ö†Ô∏è Z√°lo≈æka 'TABULKA' nebyla nalezena v ≈°ablonƒõ Word.")
            else:
                buffer = io.BytesIO()
                doc.save(buffer)
                buffer.seek(0)

                st.success("‚úÖ Zpr√°va byla √∫spƒõ≈°nƒõ vytvo≈ôena.")
                st.download_button(
                    label="‚¨áÔ∏è St√°hnout v√Ωsledkovou zpr√°vu",
                    data=buffer,
                    file_name="geneticka_zprava.docx",
                    mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                )


