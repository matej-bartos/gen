import streamlit as st
from docx import Document
import pandas as pd
import io

# --- 1. Genetick√° data s interpretac√≠ ---
geneticka_data = {
    "MCM6 13910": {
        "TT": {"KL√çƒå": "+/+", "INTERPRETACE": "Vrozen√° tolerance lakt√≥zy."},
        "CT": {"KL√çƒå": "+/-", "INTERPRETACE": "ƒå√°steƒçn√° tolerance lakt√≥zy."},
        "CC": {"KL√çƒå": "-/-", "INTERPRETACE": "Nedostatek lakt√°zy."}
    },
    "DAO": {
        "CC": {"KL√çƒå": "+/+", "INTERPRETACE": "Norm√°ln√≠ aktivita DAO."},
        "CT": {"KL√çƒå": "+/-", "INTERPRETACE": "Riziko histaminov√© intolerance."},
        "TT": {"KL√çƒå": "-/-", "INTERPRETACE": "N√≠zk√° aktivita DAO."}
    },
    "PEMT (rs7946)": {
        "CC": {"KL√çƒå": "+/+", "INTERPRETACE": "Norm√°ln√≠ metabolismus tuk≈Ø."},
        "CT": {"KL√çƒå": "+/-", "INTERPRETACE": "Pomalej≈°√≠ odbour√°v√°n√≠ tuk≈Ø."},
        "TT": {"KL√çƒå": "-/-", "INTERPRETACE": "V√Ωraznƒõ sn√≠≈æen√Ω metabolismus tuk≈Ø."}
    }
}

st.title("üß¨ Gener√°tor genetick√© zpr√°vy se ≈°ablonou")
st.markdown("Vyber geny a genotypy, vygeneruj zpr√°vu, vlo≈æ tabulku do ≈°ablony Word.")

# --- 2. V√Ωbƒõr gen≈Ø a genotyp≈Ø ---
vybrane_geny = {}
st.subheader("V√Ωbƒõr genotyp≈Ø")

for gen, moznosti in geneticka_data.items():
    if st.checkbox(f"{gen}"):
        vybrane_genotypy = list(moznosti.keys())
        vybrany = st.selectbox(f"Genotyp pro {gen}:", vybrane_genotypy, key=gen)
        vybrane_geny[gen] = vybrany

# --- 3. Vygeneruj DataFrame ---
if vybrane_geny:
    tabulka = []
    for gen, genotyp in vybrane_geny.items():
        info = geneticka_data[gen][genotyp]
        tabulka.append({
            "Gen": gen,
            "Genotyp": genotyp,
            "Kl√≠ƒç": info["KL√çƒå"],
            "Interpretace": info["INTERPRETACE"]
        })
    df = pd.DataFrame(tabulka)

    st.subheader("üìã N√°hled v√Ωsledkov√© tabulky")
    st.dataframe(df)

    # --- 4. Naƒçten√≠ ≈°ablony z rootu GitHub repozit√°≈ôe ---
    template_path = "Vysledkova_zprava.docx"
    try:
        doc = Document(template_path)
    except Exception as e:
        st.error(f"‚ùå Nepoda≈ôilo se naƒç√≠st ≈°ablonu z '{template_path}': {e}")
        st.stop()

    # --- 5. Najdi m√≠sto pro vlo≈æen√≠ tabulky ---
    target_text = "Datum a ƒças odbƒõru:"
    insert_index = None
    for i, paragraph in enumerate(doc.paragraphs):
        if target_text in paragraph.text:
            insert_index = i + 2  # vlo≈æ√≠ se pod ƒç√°ru
            break

    if insert_index is not None:
        # --- 6. Vlo≈æ tabulku ---
        table = doc.add_table(rows=1, cols=4)
        table.style = 'Table Grid'
        hdr_cells = table.rows[0].cells
        for i, col in enumerate(df.columns):
            hdr_cells[i].text = col

        for _, row in df.iterrows():
            cells = table.add_row().cells
            for i, val in enumerate(row):
                cells[i].text = str(val)

        # P≈ôesun tabulky
        tbl = table._element
        body = doc._body._element
        body.remove(tbl)
        doc.paragraphs[insert_index]._element.addnext(tbl)

        # --- 7. Ulo≈æ a st√°hni ---
        output = io.BytesIO()
        doc.save(output)
        output.seek(0)

        st.download_button(
            label="üìÑ St√°hnout hotovou zpr√°vu",
            data=output,
            file_name="Geneticka_zprava.docx",
            mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
        )
    else:
        st.error("‚ùå Nepoda≈ôilo se naj√≠t c√≠lov√© m√≠sto pro vlo≈æen√≠ tabulky.")
else:
    st.info("‚úÖ Nejprve vyber alespo≈à jeden gen.")


